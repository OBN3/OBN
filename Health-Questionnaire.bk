<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Health Management Questionnaire</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f0f8ff;
            color: #333;
        }
        h1 {
            color: #0077be;
	    text-align: center;
        }

        h2 {
            color: #0077be;
        }
        h3 {
            color: #EE4B2B;
            font-size: 16px;
        }
		
        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }		
		
        .question {
            margin-bottom: 15px;
        }
        select {
// OBN            width: 100%;
            padding: 5px;
            margin-top: 5px;
        }
        button {
            background-color: #0077be;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            margin-top: 20px;
        }
        button:hover {
            background-color: #005c99;
        }
        .error {
            color: red;
        }
        #results {
            display: none;
        }
        .chart-container {
            width: 90%;
            margin: 20px auto;
        }
    </style>
</head>
<body>

    <div class="container">

    <div id="questionnaire">
        <h1>Health Management Questionnaire</h1>
        
        <h2>How easy or difficult is it for you to:</h2>
        <h3>Please select 1 – Very Difficult, 10 – Very Easy</h3>
        
        <div id="set1"></div>
        
        <h2>To what extent do you:</h2>
        <h3>Please select 1 – Very little, 10 – Very much</h3>
        
        <div id="set2"></div>
        
        <button onclick="submitQuestionnaire()">Submit</button>
    </div>

    <div id="results">
        <div class="chart-container">
            <canvas id="chart1"></canvas>
        </div>
        <div id="stats1"></div>
        
        <div class="chart-container">
            <canvas id="chart2"></canvas>
        </div>
        <div id="stats2"></div>
        
        <div class="chart-container">
            <canvas id="chart3"></canvas>

		<div align=center>
        <button onclick="backToQuestionnaire()">Back to Questionnaire</button>
        <button onclick="saveResults()">Save Results</button>
		</div>

        </div>
       

    </div>

    </div>

    <script>
        const questions = {
            set1: [
                "Find information about your health issues on your own",
                "Understand the information provided by the doctor/pharmacist",
                "Evaluate/judge the information you received",
                "Use the information you received to make decisions",
                "Follow the doctor's/pharmacist's instructions",
                "Adhere to medical guidelines over time",
                "Know when you need a second opinion",
                "Decide if the information on the internet is reliable",
                "Monitor the symptoms of your health condition",
                "Make shared decisions with your doctor about your care"
            ],
            set2: [
                "Engage in physical activity",
                "Make healthy nutritional choices",
                "Sleep around 7 hours a night",
                "Avoid risky health behaviors",
                "Perform stress-reducing activities (yoga, breathing exercises)",
                "Understand which health behaviors are good for you",
                "Are you able to set health goals for yourself",
                "Are you able to make decisions related to a healthy lifestyle",
                "Progress towards the goals you've set",
                "Stick to the decisions you've made over time"
            ]
        };

        function createQuestions() {
            let set1Html = '';
            let set2Html = '';

            questions.set1.forEach((q, i) => {
                set1Html += `
                    <div class="question">
					  <hr><label for="set1_${i}">${q}</label><br>
                        <select id="set1_${i}">
                            <option value="">Select answer</option>
							<option value="1">1 - Very Difficult</option>							
                            ${[...Array(8)].map((_, j) => `<option value="${j+2}">${j+2}</option>`).join('')}
							<option value="10">10 - Very Easy</option>
                        </select>
                    </div>
                `;
            });

            questions.set2.forEach((q, i) => {
                set2Html += `
                    <div class="question">
                        <hr><label for="set2_${i}">${q}</label><br>
                        <select id="set2_${i}">
                            <option value="">Select answer</option>
							<option value="1">1 - Very little</option>
                            ${[...Array(8)].map((_, j) => `<option value="${j+2}">${j+2}</option>`).join('')}
							<option value="10">10 - Very much</option>                        
						</select>
                    </div>
                `;
            });

            document.getElementById('set1').innerHTML = set1Html;
            document.getElementById('set2').innerHTML = set2Html;
        }

        function submitQuestionnaire() {
            let unanswered = [];
            let answers = {set1: [], set2: []};

            questions.set1.forEach((_, i) => {
                let value = document.getElementById(`set1_${i}`).value;
                if (value === "") {
                    unanswered.push(`set1_${i}`);
                } else {
                    answers.set1.push(parseInt(value));
                }
            });

            questions.set2.forEach((_, i) => {
                let value = document.getElementById(`set2_${i}`).value;
                if (value === "") {
                    unanswered.push(`set2_${i}`);
                } else {
                    answers.set2.push(parseInt(value));
                }
            });

            if (unanswered.length > 0) {
                alert("Please answer all questions before submitting.");
                unanswered.forEach(id => {
                    document.getElementById(id).style.color = "red";
                });
            } else {
                showResults(answers);
            }
        }

        function showResults(answers) {
            document.getElementById('questionnaire').style.display = 'none';
            document.getElementById('results').style.display = 'block';

            createChart('chart1', 'How easy or difficult is it for you to:', questions.set1, answers.set1);
            createChart('chart2', 'To what extent do you:', questions.set2, answers.set2);
            createCombinedChart('chart3', questions.set1, questions.set2, answers.set1, answers.set2);

            showStats('stats1', 'How easy or difficult is it for you to:', questions.set1, answers.set1);
            showStats('stats2', 'To what extent do you:', questions.set2, answers.set2);
        }

        function createChart(canvasId, title, labels, data) {
            new Chart(document.getElementById(canvasId), {
                type: 'radar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: title,
                        data: data,
                        fill: true,
                        backgroundColor: 'rgba(0, 119, 190, 0.2)',
                        borderColor: 'rgb(0, 119, 190)',
                        pointBackgroundColor: 'rgb(0, 119, 190)',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgb(0, 119, 190)'
                    }]
                },
                options: {
                    elements: {
                        line: {
                            borderWidth: 3
                        }
                    },
	
                    scales: {
                        r: {
                            angleLines: {
                                display: false
                            },
                            suggestedMin: 0,
                            suggestedMax: 10
                        }
                    }
                }
            });
        }

        function createCombinedChart(canvasId, labels1, labels2, data1, data2) {
            new Chart(document.getElementById(canvasId), {
                type: 'radar',
                data: {
                    labels: labels1.concat(labels2),
                    datasets: [
                        {
                            label: 'Set 1: How easy or difficult is it for you to:',
                            data: data1.concat(new Array(10).fill(null)),
                            fill: true,
                            backgroundColor: 'rgba(0, 119, 190, 0.2)',
                            borderColor: 'rgb(0, 119, 190)',
                            pointBackgroundColor: 'rgb(0, 119, 190)',
                            pointBorderColor: '#fff',
                            pointHoverBackgroundColor: '#fff',
                            pointHoverBorderColor: 'rgb(0, 119, 190)'
                        },
                        {
                            label: 'Set 2: To what extent do you:',
                            data: new Array(10).fill(null).concat(data2),
                            fill: true,
                            backgroundColor: 'rgba(0, 190, 119, 0.2)',
                            borderColor: 'rgb(0, 190, 119)',
                            pointBackgroundColor: 'rgb(0, 190, 119)',
                            pointBorderColor: '#fff',
                            pointHoverBackgroundColor: '#fff',
                            pointHoverBorderColor: 'rgb(0, 190, 119)'
                        }
                    ]
                },
                options: {
                    elements: {
                        line: {
                            borderWidth: 3
                        }
                    },
                    scales: {
                        r: {
                            angleLines: {
                                display: false
                            },
                            suggestedMin: 0,
                            suggestedMax: 10
                        }
                    }
                }
            });
        }

        function showStats(elementId, title, questions, answers) {
            let avg = answers.reduce((a, b) => a + b, 0) / answers.length;
            let minScore = Math.min(...answers);
            let maxScore = Math.max(...answers);
            let minQuestion = questions[answers.indexOf(minScore)];
            let maxQuestion = questions[answers.indexOf(maxScore)];

            document.getElementById(elementId).innerHTML = `
                <p>Average of ${title} ${avg.toFixed(2)}
                <br>Question with the lowest score: ${minQuestion}, Scale: ${minScore}
                <br>Question with the highest score: ${maxQuestion}, Scale: ${maxScore}</p><br>
            `;
        }

        function backToQuestionnaire() {
            document.getElementById('questionnaire').style.display = 'block';
            document.getElementById('results').style.display = 'none';
        }

        function saveResults() {
//            alert("This function would save the results as a PDF.");
            // Implement PDF saving functionality here
                    window.print();
        }

        createQuestions();
    </script>
</body>
</html>